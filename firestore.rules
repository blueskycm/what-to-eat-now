rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ───────── 共用函式 ─────────
    function isSignedIn() {
      return request.auth != null;
    }
    // A) 以 custom claims 判定
    function isAdminClaim() {
      return isSignedIn() && request.auth.token.admin == true;
    }
    // B) 以 Firestore 白名單判定（admins/{uid} 文件存在）
    function isAdminDoc() {
      return isSignedIn() &&
             exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }
    // ✅ 兩者其一成立即視為管理員
    function isAdmin() {
      return isAdminClaim() || isAdminDoc();
    }

    // ───────── 預設全部拒絕（保底） ─────────
    match /{document=**} {
      allow read, write: if false;
    }

    // ───────── 管理員名單 ─────────
    // 已登入者可讀「自己的」 admins 文件；寫入仍僅限管理員
    match /admins/{uid} {
      allow read: if isSignedIn() && request.auth.uid == uid;
      allow write: if isAdmin();
    }

    // ───────── 僅管理員可讀寫的集合 ─────────
    match /flex_templates/{docId} {
      allow read, write: if isAdmin();
    }
    match /push_jobs/{jobId} {
      allow read, write: if isAdmin();
    }
    match /events/{date}/logs/{logId} {
      allow read: if isAdmin();   // 寫入由後端（Admin SDK）處理
    }
    match /users/{lineUserId} {
      allow read, write: if isAdmin();
    }

    // ───────── 可公開讀的前端設定（僅放不敏感資料）─────────
    match /public_config/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // ───────── settings/maps（Google Maps 成本/開關）─────────
    // 文件路徑：settings/maps
    match /settings/{docId} {
      allow read: if true;       // 前端可讀
      allow write: if isAdmin(); // 管理員（claims 或白名單）可寫
    }

    // ───────── 前端事件蒐集（僅允許建立、不可讀/改/刪）─────────
    // 建議集合：events_raw（由前端 addDoc；後台/排程做彙整）
    function strMax(x, n) { return x is string && x.size() <= n; }
    function isEventPayloadSafe(p) {
      return (p == null) || (p is map && p.size() <= 20);
    }
    function isBasicEventShapeValid(d) {
      return d.keys().hasOnly([
        'type','payload','ts','uid','lineUserId','ua','sessionId',
        'restaurantId','restaurantName','button','category'
      ])
      && d.type is string
      && (!('uid' in d) || d.uid is string)
      && (!('lineUserId' in d) || d.lineUserId is string)
      && (!('restaurantId' in d) || d.restaurantId is string)
      && (!('restaurantName' in d) || strMax(d.restaurantName, 120))
      && (!('button' in d) || strMax(d.button, 40))
      && (!('category' in d) || strMax(d.category, 40))
      && (!('ua' in d) || strMax(d.ua, 300))
      && (!('sessionId' in d) || strMax(d.sessionId, 64))
      && (!('ts' in d) || d.ts is int)
      && isEventPayloadSafe(d.payload);
    }
    match /events_raw/{id} {
      // 任何人都可上報事件（含未登入/LIFF 使用者），但只能「新增」
      allow create: if isBasicEventShapeValid(request.resource.data);
      allow read, update, delete: if false; // 後台只讀彙整後資料
    }
  }
}
